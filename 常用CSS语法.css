## Mozilla 格式:/*
@-moz-document
- 网址:                      url("^https?://www.mgtv.com/"),
- 网址前缀:                  url-prefix("^https?://www.mgtv.com/"), 
- 该域上的网址:               domain("^https?://www.mgtv.com/"),
- 与该正则表达式匹配的网址:     regexp("^https?://www.mgtv.com/")

示例:
*/

/*****过滤选择器总结*****/
一、基本过滤选择器(重点掌握下列八个)
    :first 选取第一个元素
    :last 选取最后一个元素
    :not 除去指定的选择器外的元素
    :even 选取索引号是偶数的元素
    :odd 选取索引号是奇数的元素
    :eq(index) 选取第index个元素
    :gt(index) 选取索引号大于index的元素
    :lt(index) 选取索引号小于index的元素
二、属性过滤选择器（六个必须记住）
    :[attribute] 选取拥有此属性的元素
    :[attribute=value] 选取属性值为value的元素
    :[attribute!=value] 选取属性值不为value的元素
    :[attribute^=value] 选取属性值以value开始的元素
    :[attribute*=value] 选取属性值包含value的元素

三、内容过滤选择器（四个必须记住）
    :contains 选取包含文本的text的元素
    :has(id选择器名称、Class选择器名称) 选取含有选择器所匹配的元素
    :empty 选取不包含子元素的元素
    :parent 选取包含子元素的元素
四、子元素过滤选择器（记住八个）
    :nth-child(index) 选取每个父节点下第index个元素、偶数元素或奇数元素。
    :first-child 选取每个父元素下的第一个子元素
    :last-child 选取每个父元素下的最后一个子元素
    :only-child 选取只有一个子元素的元素
    :enabled 选取所有可用的元素
    :disabled 选取所有不可用的元素
    :checked 选取所有被选中的元素(一般为（HTML中）RadioButton、CheckBox标记);
    :selected 选取被选中的选项元素（select下拉列表标记中的option=select）

五、可见性过滤选择器(两个)
    :hidden
    :visibal

/***":nth-child"的用法***/
    :nth-child(2)       选取第几个标签，“2可以是你想要的数字”
    :nth-child(n+4)     选取大于等于4标签，“n”表示从整数，下同
    :nth-child(-n+4)    选取小于等于4标签
    :nth-child(2n)      选取偶数标签，2n也可以是even
    :nth-child(2n-1)    选取奇数标签，2n-1可以是odd
    :nth-child(3n+1)    自定义选取标签，3n+1表示“隔二取一”
    :last-child         选取最后一个标签
    :nth-last-child(3)  选取倒数第几个标签,3表示选取第3

/*****30个必须记住的css选择符*****/
    1.*
    2.#X    选择id
    3. .X   类选择符
    4. X Y  后代选择符
    5. X    类型选择符
       X {}   选择所有的无序列表
    6. X:visited    页面上被点击过的或被访问过的锚标签
       X:link       选择所有已经被点击过的锚标签。
    7. X + Y        相邻选择符。它将只选择紧贴在X元素之后Y元素。
    8. X > Y        子代选择符。选择X的直接子代Y
    9. X ~ Y        兄弟选择符。选择X里面的任何Y元素。
    10. X[title]    属性选择器。只会选择有title属性的锚标签
    11. X[href=”foo”]       所有href属性为foo的锚标签
    12. X[href*=”nettuts”]  href值含有”nettuts”的锚标签
    13. X[href^=”http”]     所有以”http”开头的”href”属性的锚点
    14. X[href$=”.jpg”]     所有以".jpg"为结尾的锚点
    15. X[data-*=”foo”]
        <a href="path/to/image.jpg" data-filetype="image"> Image Link </a> 
        a[data-filetype="image"] {     color: red;  }
    16. X[foo~=”bar”]       指向那些以空格隔开多个值的属性的元素
    17. X:checked           匹配已经被选中的单选元素
    18. X:after
    19. X:hover             用户在某个元素上面悬停时
    20. X:not(selector)     selector以外的元素
    21. X::pseudoElement    使用伪元素（以::为表示）来定义元素的样式,如p::first-line,p::first-line
    22. X:nth-child(n)          元素堆中选择元素
    23. X:nth-last-child(n)     元素堆中选择元素:最后n个
    24. X:nth-of-type(n)        无序列表中选择元素类型
    25. X:nth-last-of-type(n)   无序列表中选择元素类型:最后n个
    26. X:first-child           选择父节点的第一个子孩子
    27. X:last-child            选择父节点的最后一个子节点
    28. X:only-child            选择父节点的独生子（没别的孩子啦）的元素
    29. X:only-of-type          选定在其父节点内没有兄弟节点的元素
    30. X:first-of-type         选择该类型的第一个兄弟节点

/*****鼠标划过显示:*****/
.choosedclass {
    opacity: 0;
}

.choosedclass:hover {
    opacity: 1;
    transition-duration: 1s;    /*淡出,N秒后显示*/
    -webkit-transform: rotate(360deg);  /*变换:旋转N度*/
    transform: rotate(360deg);
}

/*****居中方法*****/

/*1.flew-center*/
.flex-center {
    display: flex;
    justify-content: center;
}

/*2.inline-block-center*/
.inline-block-center {
    text-align: center;
}

/*3.inline-block-center*/
.inline-block-center div {
    display: inline-block;
    text-align: left;
}

/*****计数器*****/
CSS里的计数器主要有counter-reset属性和counter-increment属性，其中英文单词counter中文翻译为计数器，reset中文为重置，increment中文翻译为增长量。

1.通过counter-reset属性可以定义计数器的作用范围以及初始值，例如：

counter-reset: s1 3; /*--这里的s1是自定义名称，3表示初始值为3，如果不定义初始值，则默认为0--*/
2.通过counter-increment属性设置选取的作用范围和每次出现的计数器增量，例如：

counter-increment: s1 5;

/*--这里表示使用s1这个计数器，并每次递增5个数，不设置这个数字则默认为1--*/

/*示例:*/
body {
    counter-reset: s1;
}

h3 {
    counter-reset: s2;
}

h3:before {
    counter-increment: s1;
    content: "章节"counter(s1)":";
}
